{"version":3,"sources":["hooks/http.hook.js","Context/context.js","components/Loader.js","components/LinksList.js","Pages/linksPge.js","Pages/createPage.js","components/LinkCard.js","Pages/DetailPage.js","Pages/AuthPage.js","hooks/message.hook.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","async","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","key","_id","from","to","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","placeholder","id","type","value","onChange","e","target","onKeyPress","event","push","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changehandler","name","borderRadius","input","marginRight","marginLeft","disabled","onClick","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.77582e9f.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Что-то пошло не так\");\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import {createContext} from 'react';\r\n\r\nfunction noop( ){}\r\nexport const AuthContext = createContext(\r\n {\r\n  token:null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated : false\r\n }\r\n)","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n  <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)","  \r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">No Links yet</p>\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>№</th>\r\n        <th>Original</th>\r\n        <th>Shorten</th>\r\n        <th>Open</th>\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      { links.map((link, index) => {\r\n        return (\r\n          <tr key={link._id}>\r\n            <td>{index + 1}</td>\r\n            <td>{link.from}</td>\r\n            <td>{link.to}</td>\r\n            <td>\r\n              <Link to={`/detail/${link._id}`}>Open</Link>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }) }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../Context/context\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { LinksList } from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const { loading, request } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(\"/api/link\", \"GET\", null, {\r\n        Authorization: `Bearer ${token}`\r\n      });\r\n      setLinks(fetched);\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>{!loading && <LinksList links={links} />}</>;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../Context/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          { from: link },\r\n          {\r\n            Authorization: `Bearer ${auth.token}`\r\n          }\r\n        );\r\n        history.push(`/detail/${data.link._id}`);\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Insert a Link\"\r\n            id=\"link\"\r\n            type=\"text\"\r\n            value={link}\r\n            onChange={e => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"link\">Insert the link here</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePage;\r\n","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n  return (\r\n    <>\r\n      <h2>Link</h2>\r\n\r\n      <p>\r\n        Your link:{\" \"}\r\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.to}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        From:{\" \"}\r\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.from}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Number of clicks on link: <strong>{link.clicks}</strong>\r\n      </p>\r\n      <p>\r\n        Date Created:{\" \"}\r\n        <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { AuthContext } from '../Context/context'\r\nimport { Loader } from '../components/Loader'\r\nimport { LinkCard } from '../components/LinkCard'\r\n\r\nexport const DetailPage = () => {\r\n  const { token } = useContext(AuthContext)\r\n  const { request, loading } = useHttp()\r\n  const [link, setLink] = useState(null)\r\n  const linkId = useParams().id\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setLink(fetched)\r\n    } catch (e) { }\r\n  }, [token, linkId, request])\r\n\r\n  useEffect(() => {\r\n    getLink()\r\n  }, [getLink])\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && link && <LinkCard link={link} />}\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\nimport { AuthContext } from \"../Context/context\";\r\nconst AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n  const { loading, request, error, clearError } = useHttp();\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const changehandler = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\"api/auth/register\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"api/auth/login\", \"POST\", { ...form });\r\n      auth.login(data.token, data.userId);\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>Link Reducer</h1>\r\n        <div className=\"card  indigo darken-2\" style={{ borderRadius: 30 }}>\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Authentication</span>\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"input-field \">\r\n                  <input\r\n                    style={{ borderRadius: 10, input: { marginRight: 20 } }}\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    className=\"validate\"\r\n                    placeholder=\"enter your email\"\r\n                    onChange={changehandler}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"input-field \">\r\n                  <input\r\n                    style={{ borderRadius: 10 }}\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    className=\"validate\"\r\n                    placeholder=\"enter your password\"\r\n                    onChange={changehandler}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\" style={{ borderRadius: 30 }}>\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              style={{ marginRight: 10, marginLeft: 20, borderRadius: 20 }}\r\n              disabled={loading}\r\n              onClick={loginHandler}\r\n            >\r\n              Log in\r\n            </button>\r\n            <button\r\n              style={{ borderRadius: 20 }}\r\n              className=\"btn grey whiten-1 black-text\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","\r\nimport React, { useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../Context/context'\r\n\r\nexport const Navbar = () => {\r\n const history = useHistory()\r\n const auth = useContext(AuthContext)\r\n\r\n const logoutHandler = event => {\r\n  event.preventDefault()\r\n  auth.logout()\r\n  history.push('/')\r\n }\r\n\r\n return (\r\n  <nav>\r\n   <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem' }}>\r\n    <span className=\"brand-logo\">LinksReducer</span>\r\n    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n     <li><NavLink to=\"/create\">Create</NavLink></li>\r\n     <li><NavLink to=\"/links\">Links</NavLink></li>\r\n     <li>  <button\r\n      className=\"waves-effect waves-light btn-small\"\r\n      onClick={logoutHandler}\r\n     >\r\n     \r\n      Log Out</button></li>\r\n    </ul>\r\n   </div>\r\n  </nav>\r\n )\r\n}","import React from \"react\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./Context/context\";\nimport { Navbar } from \"./components/Navbar\";\nimport {Loader} from \"./components/Loader\"\n\nfunction App() {\n  const { login, logout, token, userId, ready} = useAuth();\n  const isAuthenticated=!!token\n  const routes = useRoutes(isAuthenticated)\n  if (!ready) { return <Loader /> }\n  return (\n    \n    <AuthContext.Provider value={{\n      login, logout, token, userId \n    }}>\n      <Router>\n        {isAuthenticated && <Navbar/>}\n        <div className=\"container\">{routes}</div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n const [ready, setReady] = useState(false)\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        userId:id,\r\n        token:jwtToken\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n   setReady(true)\r\n  }, [login]);\r\n\r\n return { login, logout, token, userId, ready};\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LinksPage} from \"./Pages/linksPge\";\r\nimport CreatePage from \"./Pages/createPage\";\r\nimport {DetailPage} from \"./Pages/DetailPage\";\r\nimport AuthPage from \"./Pages/AuthPage\";\r\nexport const useRoutes = isAuthentificated => {\r\n  if (isAuthentificated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage></AuthPage>\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}